push() ------->   在数组末尾添加参数
pop() ------>    删除数组最后一个参数
reverse()  ------->   将数组顺序反转
sort()   -------> 将数组按字符串大小排序，括号里可以填参数(什么样的参数就怎样排序)
concat()  ------>  创造原数组的副本，括号里填参数依次放人副本数组末尾
slice()  ------->   当填一个参数时返回一个从该参数开始直到数组末尾的数组，当填两个参数时返回一个从第一个参数开始直到第二个参数的数组
splice() -------->  有三个参数（开始的位置，删除的个数，要放入的参数）返回一个包含删除参数的数组，没有就是空数组
join（）：将数组中所有元素都转化为字符串并连接在一起，返回最后生成的字符串。可以指定一个可选的字符串在生成的字符串中来分隔数组的各个元素。如果不指定分隔符，默认使用逗号。
unshift（）：在数组前面添加一个或多个元素。最后返回数组新的长度。
shift（）：删除数组的第一个元素并将其返回。
toString（）：就是不使用参数的join（）方法。
toLocaleString（）：和toString（）方法差不多。
forEach（）：每个数组元素都调用括号内的函数，函数里还可以放一个或三个参数，返回undefined。
map（）：每个数组元素都调用括号内的函数，并返回一个函数返回值的数组，函数内可接收一个参数。
filter（）：每个数组元素都调用括号内的函数，函数接收参数，当元素满足函数内的条件，会将该满足条件的元素添加到一个新数组里，最后返回该新数组。
every（）：每个数组元素都调用括号内的函数，函数接收参数，所有元素都满足函数内的条件，返回true。只要有不满足条件的，返回false。
some（）：每个数组元素都调用括号内的函数，函数接收参数，只要有一个元素满足函数内的条件，返回true。所有都不满足条件的，返回false。
reduce（）：使用指定的函数将数组元素进行组合。接收参数参数，第一个是执行函数，第二个是传递给函数的初始值（第二个参数不设置，默认数组第一个元素为参数）。
reduceRight（）：和reduce（）原理相同，不同在于它是按照从右到左处理数组。
indexOf（）：括号内填的参数，如果数组中有该参数，返回索引值，没有就返回-1。
lastindexOf（）：和indexOf（）原理相同，不同在于它是反向搜索。